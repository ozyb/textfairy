apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'io.fabric'
apply plugin: 'checkstyle'
apply plugin: 'kotlin-kapt'

def versions = ['appcompat_v7' : '27.1.1',
                'butterknife'  : '8.8.1',
                'leak_canary'  : '1.5',
                'card_view'    : '27.1.1',
                'glide'        : '4.8.0',
                'design'       : '27.1.1',
                'lifecycle'    : '1.1.1',
                'photoview'    : '1.2.4',
                'play_services': '16.0.3',
                'relinker'     : '1.2.3']



task checkstyle(type: Checkstyle) {
    configFile file("${project.rootDir}/checkstyle/checkstyle.xml")
    configProperties.checkstyleSuppressionsPath = file("${project.rootDir}/config/quality/checkstyle/suppressions.xml").absolutePath
    source 'src'
    include '**/*.java'
    exclude '**/gen/**'
    classpath = files()
}


android {
    compileSdkVersion 27
    buildToolsVersion '28.0.3'

    lintOptions {
        disable 'MissingTranslation'
    }

    dexOptions {
        // Skip pre-dexing when running on Travis CI or when disabled via -Dpre-dex=false.
        preDexLibraries = preDexEnabled && !travisBuild
    }

    defaultConfig {
        applicationId "com.renard.ocr"
        minSdkVersion 15
        targetSdkVersion 27
        versionCode 80
        versionName = "3.1.8"
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "android.test.InstrumentationTestRunner"


    }
    signingConfigs {
        release
    }
    buildTypes {
        debug {
            debuggable true
        }
        release {
            //runProguard true
            proguardFile file('android.pro')
            proguardFile getDefaultProguardFile('proguard-android.txt')
            signingConfig signingConfigs.release
        }
    }

    splits {
        abi {
            enable true
            reset()
            include 'x86', 'x86_64', 'armeabi-v7a', 'arm64-v8a'
            universalApk true
        }
    }

    // map for the version code
    project.ext.versionCodes = ['armeabi': 1, 'armeabi-v7a': 2, 'arm64-v8a': 3, 'mips': 5, 'mips64': 6, 'x86': 6, 'x86_64': 9]

    android.applicationVariants.all { variant ->
        // assign different version code for each output
        variant.outputs.each { output ->
            output.versionCodeOverride =
                    project.ext.versionCodes.get(output.getFilter(com.android.build.OutputFile.ABI), 0) * 100 + android.defaultConfig.versionCode
        }
    }
    flavorDimensions "mode"

    productFlavors {

        playstore {
            dimension "mode"
        }
        develop {
            dimension "mode"
        }
    }


    lintOptions {
        //I'm too lazy to translate everything
        abortOnError true
    }
    externalNativeBuild {
        ndkBuild {
            path 'Android.mk'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

Properties props = new Properties()
def propFile = new File('signing.properties')
if (propFile.canRead()) {
    props.load(new FileInputStream(propFile))

    if (props != null && props.containsKey('STORE_FILE') && props.containsKey('STORE_PASSWORD') &&
            props.containsKey('KEY_ALIAS') && props.containsKey('KEY_PASSWORD')) {
        android.signingConfigs.release.storeFile = file(props['STORE_FILE'])
        android.signingConfigs.release.storePassword = props['STORE_PASSWORD']
        android.signingConfigs.release.keyAlias = props['KEY_ALIAS']
        android.signingConfigs.release.keyPassword = props['KEY_PASSWORD']
    } else {
        println 'signing.properties found but some entries are missing'
        android.buildTypes.release.signingConfig = null
    }
} else {
    println 'signing.properties not found'
    android.buildTypes.release.signingConfig = null
}



dependencies {
    implementation 'com.github.barteksc:pdfium-android:1.5.0'
    implementation fileTree(include: '*.jar', dir: 'src/main/libs')
    implementation "com.android.support:design:${versions.appcompat_v7}"
    implementation 'com.android.support.constraint:constraint-layout:1.1.0'
    implementation 'com.android.support:support-vector-drawable:27.1.1'
    debugImplementation "com.squareup.leakcanary:leakcanary-android:${versions.leak_canary}"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:${versions.leak_canary}"
    implementation 'com.viewpagerindicator:library:2.4.1@aar'
    implementation "com.commit451:PhotoView:${versions.photoview}"
    implementation 'com.google.code.findbugs:jsr305:3.0.1'
    implementation 'de.greenrobot:eventbus:2.4.0'
    implementation 'com.nineoldandroids:library:2.4.0'
    implementation "com.android.support:design:${versions.design}"
    implementation "com.android.support:appcompat-v7:${versions.appcompat_v7}"
    implementation 'org.apache.commons:commons-compress:1.12'
    implementation "com.android.support:cardview-v7:${versions.card_view}"
    implementation "com.jakewharton:butterknife:${versions.butterknife}"
    implementation 'com.squareup.picasso:picasso:2.71828'

    implementation "com.github.bumptech.glide:glide:${versions.glide}"
    androidTestImplementation 'com.google.dexmaker:dexmaker-mockito:1.2'
    androidTestImplementation 'com.google.dexmaker:dexmaker:1.2'
    androidTestImplementation 'org.mockito:mockito-core:2.11.0'
    androidTestImplementation 'junit:junit:4.12'
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-all:1.10.19'
    testImplementation('org.robolectric:robolectric:3.0-rc2') {
        exclude group: 'commons-logging', module: 'commons-logging'
    }
    playstoreImplementation "com.google.android.gms:play-services-analytics:${versions.play_services}"
    playstoreImplementation('com.crashlytics.sdk.android:crashlytics:2.9.5@aar') {
        transitive = true
    }
    playstoreImplementation('com.crashlytics.sdk.android:crashlytics-ndk:2.0.5@aar') {
        transitive = true
    }
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "android.arch.lifecycle:extensions:${versions.lifecycle}"
    implementation "android.arch.lifecycle:common-java8:${versions.lifecycle}"
    implementation "com.getkeepsafe.relinker:relinker:${versions.relinker}"

    annotationProcessor "com.github.bumptech.glide:compiler:${versions.glide}"
    kapt "com.jakewharton:butterknife-compiler:${versions.butterknife}"
}
afterEvaluate {
    android.applicationVariants.all { variant ->
        variant.resValue 'string', 'application_id', variant.applicationId
    }
}
crashlytics {
    enableNdk true
}
apply plugin: 'com.google.gms.google-services'
